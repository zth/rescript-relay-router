// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as RelayRouter__Manifest from "../src/RelayRouter__Manifest.mjs";

function viteManifestToRelayRouterManifest(manifest) {
  var getFile = function (import_) {
    return "/" + manifest[import_].file;
  };
  return {
          entryPoint: "/" + manifest["index.html"].file,
          files: Js_dict.fromArray(Belt_Array.keepMap(Js_dict.entries(manifest), (function (param) {
                      var chunk = param[1];
                      if (!(chunk.isEntry == null) || !(chunk.isDynamicEntry == null)) {
                        return [
                                getFile(param[0]),
                                {
                                  imports: Belt_Option.getWithDefault(Caml_option.nullable_to_opt(chunk.imports), []).map(getFile),
                                  css: Belt_Option.getWithDefault(Caml_option.nullable_to_opt(chunk.css), []),
                                  assets: Belt_Option.getWithDefault(Caml_option.nullable_to_opt(chunk.assets), [])
                                }
                              ];
                      }
                      
                    })))
        };
}

function transformManifest(inPath, outPath) {
  var viteManifest = JSON.parse(Fs.readFileSync(inPath, "utf-8"));
  var routerManifest = viteManifestToRelayRouterManifest(viteManifest);
  var __x = RelayRouter__Manifest.stringifyWithSpace(routerManifest, 2);
  Fs.writeFileSync(outPath, __x, "utf-8");
}

export {
  transformManifest ,
}
/* fs Not a pure module */
